package day37.restaurantTask;import day35.ScrumTask.Developer;import day35.ScrumTask.Tester;import java.util.ArrayList;import java.util.Arrays;public class localRestaurant {    public static void main(String[] args) {        Chef chef1 = new Chef("Layan", 01, 11);        Chef chef2 = new Chef("Ali", 02, 12);        Chef chef3 = new Chef("Alex", 03, 13);        Chef chef4 = new Chef("Lala", 04, 14);        Chef[] chef = {chef2, chef3, chef4};        Server server1 = new Server("Olga", 22, 12);        Server server2 = new Server("Aygun", 39, 18);        Server server3 = new Server("Tunc", 28, 13);        Server server4 = new Server("Sinem", 13, 20);        Server[] server = {server2, server3, server4};        ArrayList<Chef> chefs = new ArrayList<>();        chefs.add(chef1);        ArrayList<Server> servers = new ArrayList<>();        servers.add(server1);        System.out.println(chefs);        System.out.println(servers);        System.out.println("---------------------------------------------");        //ArrayList<Chef> chefs = new ArrayList<>();                Already created        chefs.addAll(Arrays.asList(chef));        //ArrayList<Server> servers = new ArrayList<>();            Already created        servers.addAll(Arrays.asList(server));        System.out.println(chefs);        System.out.println(servers);        System.out.println("---------------------------------------------");        for (Chef each : chefs) {            System.out.println(each.name + " hourly rate: " + each.hourlyRate);        }        System.out.println("---------------------------------------------");        for (Server each : servers) {            System.out.println(each.name + "\'s id : " + each.id);        }//        chefs.addAll(Arrays.asList(chef));//        servers.addAll(Arrays.asList(server));////        System.out.println(chefs);//        System.out.println(servers);//        servers.addAll(Arrays.asList(server));////        System.out.println(chefs);//        System.out.println(servers);        System.out.println("---------------------------------------------");        Restaurant brothers = new Restaurant("Selcuk Bayram", "Near the Sultanahmet", 5, chefs, servers);        brothers.hireChef(chef1);        brothers.hireServer(server1);        //addAll chefs and servers        brothers.hireChefs(chef);        brothers.hireServer(server);        System.out.println(brothers);        System.out.println("---------------------------------------------");        for (Chef eachChef : brothers.chefs) {            System.out.println(eachChef.name);        }        System.out.println("---------------------------------------------");        System.out.println(brothers.owner + "\'s restaurant is " + brothers.numberOfStars + " stars");for (Chef each:brothers.chefs){    System.out.println(each.name+" : $"+each.hourlyRate);}    }}/*6.4. Create a class LocalRestaurant that has a main method with the following:	        	- Make a Restaurant object	        	- Create an array of servers with their information set. Add those initial servers to the ArrayList of Servers in the Restaurant object	            - Create an array of chefs with their information set. Add those initial chefs to the ArrayList of Chefs in the Restaurant object	            - Print your whole restaurants information*/